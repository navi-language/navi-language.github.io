use std.fs;
use std.io;
use std.net.http;
use utils;

let target_file = "releases.md";
let repo = "navi-language/navi";
let page_size = 200;

fn fetch_releases() throws {
    let release_url = `https://api.github.com/repos/${repo}/releases?per_page=${page_size}`;
    let headers = http.new_headers();
    headers.set("User-Agent", "Navi-Release-Generator");

    let res = try http.get(release_url, headers: headers);
    let data = try res.json();

    let frontmatter = `---\ntitle: Releases\neditLink: false\n---\n\n`;
    let release_body = frontmatter + "# Releases\n\n";

    for (let release in data.array()!) {
        let prerelease = release.get("prerelease")?.bool() || false;
        if (prerelease) {
            // ignore pre-releases
            continue;
        }

        let name = release.get("name")?.string() || "";
        if (name.is_empty()) {
            name = release.get("tag_name")?.string()!;
        }
        let html_url = release.get("html_url")?.string();
        let body = utils.replace_headings(release.get("body")?.string(), level: 1);
        release_body += `## [${name}](${html_url})\n\n`;
        release_body += `${body}\n\n`;
    }

    let f = try fs.create(target_file);
    try f.write_string(release_body);
    try f.flush();
}

fn main() throws {
    try fetch_releases();
    io.println("Generate releases success.");
}
